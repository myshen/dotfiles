
# loaded for interactive shells

# non-interactive base config
. "$HOME/.dotfiles/bash-like-common/env"

_onetime() {
  # if [[ 1 -eq "$BASH_ONETIME" ]]; then
  #   return
  # elif [[ -z "$BASH_ONETIME" ]]; then
  #   export BASH_ONETIME=2
  #   return
  # fi

  # PS4='+ $(date "+%s.%N")\011 '
  # exec 3>&2 2>/tmp/bashstart.$$.log
  # set -x

  # Interactive stuff follows
  source_file_if_exists "/etc/bashrc"
  source_file_if_exists "${DOTFILES}/bash-like-common/rc"

  # set +x
  # exec 2>&3 3>&-

  # ENV #########################################################################

  # Update window size after every command
  shopt -s checkwinsize

  shopt -s histappend
  # Save multi-line commands as one command
  shopt -s cmdhist
  unset HISTFILESIZE
  export HISTSIZE=10000000  # 10e7
  export HISTIGNORE='&:[  ]*:ls:ll:bg:fg:jobs:history:exit:clear:reset:git st:git co:git lg:git rc:git spi:git dc:git fetch:git stash:git ca:git reset:gst:gdh:cd ..:pass'
  export HISTCONTROL="ignoreboth:erasedups"
  export HISTTIMEFORMAT='%F %T '

  # Color for Man pages in less (doesn't work in zsh; untested otherwise)
  # https://linuxtidbits.wordpress.com/2009/03/23/less-colors-for-man-pages/
  export LESS_TERMCAP_mb="$(printf '\e[01;31m')"       # begin blinking
  export LESS_TERMCAP_md="$(printf '\e[01;38;5;74m')"  # begin bold
  export LESS_TERMCAP_me="$(printf '\e[0m')"           # end mode
  export LESS_TERMCAP_se="$(printf '\e[0m')"           # end standout-mode
  export LESS_TERMCAP_so="$(printf '\e[38;5;246m')"    # begin standout-mode - info box
  export LESS_TERMCAP_ue="$(printf '\e[0m')"           # end underline
  export LESS_TERMCAP_us="$(printf '\e[04;38;5;146m')" # begin underline

  # This defines where cd looks for targets
  # Add the directories you want to have fast access to, separated by colon
  # Ex: CDPATH=".:~:~/projects" will look for targets in the current working directory, in home and in the ~/projects folder
  export CDPATH="."

  # Prevent file overwrite on stdout redirection
  # Use `>|` to force redirection to an existing file
  set -o noclobber

  # Enable incremental history search with up/down arrows (also Readline goodness)
  # Learn more about this here: http://codeinthehole.com/writing/the-most-important-command-line-tip-incremental-history-searching-with-inputrc/
  bind '"\e[A": history-search-backward'
  bind '"\e[B": history-search-forward'
  bind '"\e[C": forward-char'
  bind '"\e[D": backward-char'

  hist_last() {
    history | awk 'END { $1 = ""; $2 = ""; $3 = ""; print }'
  }

  source_file_if_exists "${DOTFILES}/bash/completion"
  source_file_if_exists "${DOTFILES}/bash/prompt"

  export IGNOREEOF=1

  # if [[ 2 -eq "$BASH_ONETIME" ]]; then
  #   export BASH_ONETIME=1
  # fi
}
_onetime
# vim: ft=sh
