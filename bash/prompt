ESC="\[\e["
ECLR="${ESC}m\]"

# http://stackoverflow.com/a/13864829
if [ -z ${HOST_C+x} ]; then
  HOST_C="${ESC}1;37m\]"
fi
CWD_C="${ESC}0;33m\]";
C_RED="${ESC}0;31m\]";
RESET_C="${ESC}0m\]";
BLACK_C="${ESC}0;30m\]";
C_GREEN="${ESC}0;32m\]";

# see asciicolors.py TERMCOLORS

# PROTIP fill with underscores for debug
prompt_div_char=" "
# Recalculated every time the prompt is shown by prompt_command
prompt_div="${prompt_div_char}"

if [ -z "$PS1_SUFFIX" ]; then
  PS1_SUFFIX=""
fi
PS1_BASE=""
PS1_BASE="${PS1_BASE}${HOST_C}"
PS1_BASE="${PS1_BASE}\u${BLACK_C}@${C_GREEN}\H"
PS1_BASE="${PS1_BASE}${BLACK_C}:${CWD_C}\W${ECLR} ${HOST_C}\s "
PS1_BASE="${PS1_BASE}[\j] \!"
export PS1_BASE;

unacceptable_status() {
  [[ "${status}" -ne 0 ]] && [[ "${status}" -ne 146 ]]
}

make_prompt_filler() {
  local tlen
  local hlen
  hlen="$2"
  tlen="$1"
  let fill_length=${COLUMNS}-${tlen}-${hlen}
  let filler_len="${#prompt_div_char}"

  local filler
  filler="$prompt_div_char"
  while (( "$filler_len" < "$fill_length" / 2 )); do
    filler="$filler$filler"
    (( filler_len = filler_len * 2 ))
  done
  while [ "${fill_length}" -gt "0" ]; do
    printf "$filler"
    let fill_length=${fill_length}-$filler_len
    while (( "$filler_len" > "$fill_length" )) && \
          (( "$filler_len" > "${#prompt_div_char}" )); do
      let filler_len=filler_len/2
      filler="${filler:0:$filler_len}"
    done
  done
}

make_prompt_divider() {
  header="$1"
  trailer=" $2"
  status="$3"

  hlen=${#header}
  tlen=${#trailer}

  if unacceptable_status; then
    trailer="[${status}]${trailer}"
    tlen=${#trailer}
    trailer="$C_RED${trailer}"
    header="$C_RED${header:0:1}${header:1}"
  else
    trailer="$C_GREEN${trailer}"
  fi

  printf "${header}$(make_prompt_filler $hlen $tlen)${trailer}${RESET_C}\n"
}

prompt_command() {
  status="$?"

  [[ ! "$-" =~ "x" ]]
  setx="$?"
  if (( "$setx" > 0 )); then
   set +x
  fi

  pyvenv=""
  if [ -n "${VIRTUAL_ENV}" ]; then
    pyvenv="$(basename ${VIRTUAL_ENV})"
  fi

  git="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"

  leader="\$ ${pyvenv:+<$pyvenv> }${git:+($git) }"
  trailer="$(date +'%F %T')"

  prefix="$(make_prompt_divider "${leader}" "${trailer}" "${status}")"
  suffix="${PS1_SUFFIX}${HOST_C}${ECLR}\n"
  export PS1="${prefix}${PS1_BASE}${suffix}"

  # Flush current session history
  history -a

  # Load session history
  # history -n

  if (( "$setx" > 0 )); then
    set -x
  fi
}

path_add "prompt_command" 1 "PROMPT_COMMAND" ";"
# Executed every time the prompt is shown
prompt_command
# vim: filetype=sh
